# Remap prefix from 'C-b' to 'C-space'
unbind C-b
set -g prefix C-Space


# Send C-Space (the prefix itself) if pressed twice
bind C-Space send-keys C-Space


# Pass Esc directly to Vim instead of waiting for a bit
set -s escape-time 1


# For tmux to work correctly, this must be set to 'screen' or some derivative of that
set -g default-terminal "screen-256color"


# Enable mouse mode
set -g mouse on


# Renumber windows when one is closed
set-option -g renumber-windows on


# Increase scrollback history size
set-option -g history-limit 10000



################
### BINDINGS ###
################

# Reload the configuration
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded .tmux.conf"


# Split panes using | and -
bind | split-window -h -c '#{pane_current_path}'
bind '\' split-window -h -c '#{pane_current_path}'  # So I don't have to press Shift
bind - split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator and https://github.com/pypa/pipenv/issues/1407#issuecomment-379073350
is_vim="tmux-check-if-vim #{pane_tty}" 
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# Resize panes using Alt+arrow without prefix
bind -n M-Left resize-pane -L 5
bind -n M-Down resize-pane -D 5
bind -n M-Up resize-pane -U 5
bind -n M-Right resize-pane -R 5


# Copy visual selection using y
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"


# Create new sessions and windows
bind-key S command-prompt -p "Session name:" "new-session; rename-session '%%'"
bind-key C command-prompt -p "Window name:" "new-window; rename-window '%%'"



######################
### DESIGN CHANGES ###
######################

# Panes
set -g pane-active-border-style fg=colour117
set -g pane-border-style fg=colour146


# Status bar
set -g status-bg colour245
set -g status-fg colour188
set -g status-left '#[fg=colour236,bg=colour215] #S '
set -g status-right '#[fg=colour236,bg=colour215] #(tmux ls 2>/dev/null | wc -l | sed -e "s/^[ \t]*//") '
set -g status-justify left
setw -g window-status-current-format ' #[fg=colour236]#I #W #F '
setw -g window-status-current-style bg=colour117
setw -g window-status-format ' #[fg=colour236]#I #W #F '


# Status bar in message and command mode
set -g message-style fg=colour188,bg=colour124,bold
set -g message-command-style fg=colour124,bg=colour236

