" Set Leader to Space.
let mapleader=' '

" Pleasant defaults.
set clipboard=unnamed,ideaput
set ignorecase
set nrformats-=octal
set number
set relativenumber
set scrolloff=4
set showmode
set sidescrolloff=5
set smartcase
set visualbell

" Search.
set hlsearch

" When finding =, include the whitespace around it!
noremap t= /\s*=<CR>
noremap T= ?=\s*?e<CR>

" Navigate splits.
nnoremap <C-H> <C-W>h
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k
nnoremap <C-L> <C-W>l

" Wildfire-like highlighting
nmap <CR> :action EditorSelectWord<CR>
vmap <CR> :action EditorSelectWord<CR>
vmap <Backspace> :action EditorUnSelectWord<CR>

" Indent and de-indent.
vnoremap < <gv
vnoremap > >gv

" Comment like in vim-commentary
nmap <Bslash><Bslash> :action CommentByLineComment<CR>
vnoremap <Bslash> :action CommentByLineComment<CR>

" Close all windows except active.
nnoremap <M-S-W> :action CloseAllEditorsButActive<CR>

" *** Prefix <leader><leader>: general things
noremap <leader><leader>/ <Esc>:nohlsearch<CR>
" Bind 'git blame'. We have to call Annotate twice because it interacts weirdly with line numbers.
nnoremap <leader>gb :action Annotate<CR>:action Annotate<CR>
" Hide all toolwindows and give focus to the edit pane.
nnoremap <leader><leader>f :action HideAllWindows<CR>
" Reload this file.
nnoremap <leader><leader>r :source ~/.ideavimrc<CR>:echo "Reloaded .ideavimrc"<CR>


" *** Prefix <leader>f: finding things
nnoremap <leader>fb :action Switcher<CR>
nnoremap <leader>fc :action GotoClass<CR>
nnoremap <leader>ff :action GotoFile<CR>
nnoremap <leader>fg :action FindInPath<CR>
nnoremap <leader>fr :action FindUsages<CR>
nnoremap <leader>f* viw:action FindInPath<CR>
nnoremap <leader>fn :action ActivateProjectToolWindow<CR>

" *** Prefix <leader>m: making things
nnoremap <leader>mf :action ReformatCode<CR>
nnoremap <leader>mr :action Maven.Reimport<CR>

" *** Prefix <leader>r: refactoring things
" Also, go directly to insert mode when renaming or introducing a new variable.
nnoremap <leader>rr :action RenameElement<CR>i
nnoremap <leader>rv :action IntroduceVariable<CR>i
vnoremap <leader>rv :action IntroduceVariable<CR>
nnoremap <leader>ro :action OptimizeImports<CR>
nnoremap <leader>ri :action Inline<CR>
nnoremap <leader>rm :action ExtractMethod<CR>
nnoremap <leader>r< :action MoveElementLeft<CR>
nnoremap <leader>r> :action MoveElementRight<CR>

" *** Prefix <leader>t: running tests
nnoremap <leader>tt :action RunClass<CR>

