{
  "shebang": {
    "prefix": "#!",
    "body": ["#!/usr/bin/env sh", "", ""],
    "description": "Shebang"
  },
  "directory": {
    "prefix": "directory",
    "body": "SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"",
    "description": "Get the script's source directory"
  },
  "safe": {
    "prefix": "safe",
    "body": "set -euo pipefail",
    "description": "Enable all safety options"
  },
  "if empty": {
    "prefix": "ifempty",
    "body": ["if [[ -z \"$$1\" ]]; then", "\t$0", "fi"],
    "description": "If string is empty"
  },
  "if not empty": {
    "prefix": "ifnotempty",
    "body": ["if [[ -n \"$$1\" ]]; then", "\t$0", "fi"],
    "description": "If string is not empty"
  },
  "if exists": {
    "prefix": "ifexists",
    "body": ["if [[ -f \"$$1\" ]]; then", "\t$0", "fi"],
    "description": "If file exists"
  },
  "if directory": {
    "prefix": "ifdirectory",
    "body": ["if [[ -d \"$$1\" ]]; then", "\t$0", "fi"],
    "description": "If file is a directory"
  },
  "pidfile": {
    "prefix": "pidfile",
    "body": [
      "### PID-file logic to make sure that the script only runs once",
      "### See https://youtu.be/ylohuR0fzz4?t=551 for an explanation",
      "PIDFILE=$1",
      "function cleanup() {",
      "  rm \"$PIDFILE\"",
      "}",
      "if [[ -f $PIDFILE ]]; then",
      "  pid=$(cat \"$PIDFILE\")",
      "	if ps -p \"$pid\" > /dev/null 2>&1; then",
      "	  echo \"Script is already running\"",
      "		exit 1",
      "	else",
      "	  # process not found; overwrite",
      "		echo $$ > \"$PIDFILE\"",
      "	fi",
      "else",
      "  # wasn't running; write pid",
      "	echo $$ > \"$PIDFILE\"",
      "fi",
      "trap cleanup EXIT",
      "### End of PID-file logic",
      ""
    ],
    "description": "Run only once, using a PID file"
  }
}
